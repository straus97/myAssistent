#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ VPS Ubuntu 22.04
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [update|full]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "=================================================="
echo "   MyAssistent Deploy Script"
echo "=================================================="
echo ""

MODE=${1:-full}

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
function info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

function warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

function error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "requirements.txt" ]; then
    error "–ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞
if [ "$MODE" == "full" ]; then
    info "–ü–û–õ–ù–´–ô DEPLOY (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫)"
elif [ "$MODE" == "update" ]; then
    info "–û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–î–ê (git pull + restart)"
else
    error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $MODE"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [full|update]"
    exit 1
fi

# ========================================
# –ü–û–õ–ù–´–ô DEPLOY (–ø–µ—Ä–≤—ã–π —Ä–∞–∑)
# ========================================

if [ "$MODE" == "full" ]; then
    info "–®–∞–≥ 1/8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Ubuntu
    if [ ! -f /etc/lsb-release ]; then
        error "–≠—Ç–æ –Ω–µ Ubuntu!"
        exit 1
    fi
    
    source /etc/lsb-release
    info "–û–°: $DISTRIB_DESCRIPTION"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python 3.10+
    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2 | cut -d'.' -f1,2)
    info "Python: $PYTHON_VERSION"
    
    if (( $(echo "$PYTHON_VERSION < 3.10" | bc -l) )); then
        error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.10+, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PYTHON_VERSION"
        exit 1
    fi
    
    info "–®–∞–≥ 2/8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    sudo apt-get update
    sudo apt-get install -y \
        python3-pip \
        python3-venv \
        git \
        docker.io \
        docker-compose \
        postgresql-client \
        curl \
        htop
    
    # –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    sudo usermod -aG docker $USER
    info "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É docker (—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–ª–æ–≥–∏–Ω!)"
    
    info "–®–∞–≥ 3/8: –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    if [ ! -d ".venv" ]; then
        python3 -m venv .venv
    fi
    
    source .venv/bin/activate
    
    info "–®–∞–≥ 4/8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    pip install --upgrade pip
    pip install -r requirements.txt
    
    info "–®–∞–≥ 5/8: –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞..."
    if [ ! -f ".env" ]; then
        warn ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        info "–°–∫–æ–ø–∏—Ä—É–π server/.env.production –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏ —Å–µ–∫—Ä–µ—Ç—ã:"
        echo "  cp server/.env.production .env"
        echo "  nano .env"
        exit 1
    fi
    
    info "–®–∞–≥ 6/8: –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose up -d postgres mlflow prometheus grafana
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL
    info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL (30 —Å–µ–∫)..."
    sleep 30
    
    info "–®–∞–≥ 7/8: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
    alembic upgrade head
    
    info "–®–∞–≥ 8/8: –°–æ–∑–¥–∞–Ω–∏–µ systemd service..."
    
    # –°–æ–∑–¥–∞–µ–º systemd service —Ñ–∞–π–ª
    sudo tee /etc/systemd/system/myassistent.service > /dev/null <<EOF
[Unit]
Description=MyAssistent Trading Bot
After=network.target docker.service
Requires=docker.service

[Service]
Type=simple
User=$USER
WorkingDirectory=$(pwd)
Environment="PATH=$(pwd)/.venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ExecStart=$(pwd)/.venv/bin/uvicorn src.main:app --host 0.0.0.0 --port 8000 --workers 2
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable myassistent
    sudo systemctl start myassistent
    
    info "–ü–û–õ–ù–´–ô DEPLOY –ó–ê–í–ï–†–®–ï–ù!"
    echo ""
    echo "=================================================="
    echo "   –î–û–°–¢–£–ü –ö –°–ï–†–í–ò–°–ê–ú:"
    echo "=================================================="
    echo "API:        http://185.73.215.38:8000/docs"
    echo "MLflow:     http://185.73.215.38:5000"
    echo "Prometheus: http://185.73.215.38:9090"
    echo "Grafana:    http://185.73.215.38:3001"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
    echo "  sudo systemctl status myassistent"
    echo ""
    echo "–õ–æ–≥–∏:"
    echo "  sudo journalctl -u myassistent -f"
    echo ""

# ========================================
# –û–ë–ù–û–í–õ–ï–ù–ò–ï (git pull + restart)
# ========================================

elif [ "$MODE" == "update" ]; then
    info "–®–∞–≥ 1/5: Git pull..."
    git pull origin main
    
    info "–®–∞–≥ 2/5: –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv..."
    source .venv/bin/activate
    
    info "–®–∞–≥ 3/5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    pip install -r requirements.txt --upgrade
    
    info "–®–∞–≥ 4/5: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    alembic upgrade head
    
    info "–®–∞–≥ 5/5: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
    sudo systemctl restart myassistent
    
    info "–û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
    echo "  sudo systemctl status myassistent"
fi

echo ""
info "–ì–û–¢–û–í–û! üöÄ"



