#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ MyAssistent
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º

echo "üìä MyAssistent - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "======================================"
echo "üïê $(date '+%Y-%m-%d %H:%M:%S')"
echo ""

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd ~/myAssistent

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
echo "üè• –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ò–°–¢–ï–ú–´:"
echo "------------------------------"
health_status=$(curl -s -H "X-API-Key: 5fa613c18a92d0d69d3bf5a5f7d72396cd5cca41ed0bc1d058db499107ba6f73" \
  http://localhost:8000/health | python3 -m json.tool)

if [ $? -eq 0 ]; then
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "$health_status"
else
    echo "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: sudo systemctl status myassistent"
    exit 1
fi

echo ""

# 2. –°—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∞
echo "üìà –°–¢–ê–¢–£–° PAPER TRADING –ú–û–ù–ò–¢–û–†–ê:"
echo "--------------------------------"
monitor_status=$(curl -s -H "X-API-Key: 5fa613c18a92d0d69d3bf5a5f7d72396cd5cca41ed0bc1d058db499107ba6f73" \
  http://localhost:8000/paper-monitor/status | python3 -m json.tool)

if [ $? -eq 0 ]; then
    echo "$monitor_status"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    enabled=$(echo "$monitor_status" | python3 -c "import sys, json; data=json.load(sys.stdin); print('‚úÖ' if data.get('enabled') else '‚ùå')")
    last_update=$(echo "$monitor_status" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('last_update', 'N/A'))")
    total_signals=$(echo "$monitor_status" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('stats', {}).get('total_signals', 'N/A'))")
    errors=$(echo "$monitor_status" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('stats', {}).get('errors', 'N/A'))")
    
    echo ""
    echo "üìä –ö–õ–Æ–ß–ï–í–´–ï –ú–ï–¢–†–ò–ö–ò:"
    echo "  –ú–æ–Ω–∏—Ç–æ—Ä: $enabled"
    echo "  –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $last_update"
    echo "  –í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤: $total_signals"
    echo "  –û—à–∏–±–∫–∏: $errors"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∞"
fi

echo ""

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∑–∏—Ü–∏–π
echo "üí∞ –û–¢–ö–†–´–¢–´–ï –ü–û–ó–ò–¶–ò–ò:"
echo "-------------------"
positions=$(curl -s -H "X-API-Key: 5fa613c18a92d0d69d3bf5a5f7d72396cd5cca41ed0bc1d058db499107ba6f73" \
  http://localhost:8000/trade/positions | python3 -m json.tool)

if [ $? -eq 0 ]; then
    echo "$positions"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π
    pos_count=$(echo "$positions" | python3 -c "import sys, json; data=json.load(sys.stdin); print(len(data.get('positions', [])))")
    
    if [ "$pos_count" -gt 0 ]; then
        echo ""
        echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–∫—Ä—ã—Ç–æ $pos_count –ø–æ–∑–∏—Ü–∏–π"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–∑–∏—Ü–∏–π
        echo "$positions" | python3 -c "
import sys, json
from datetime import datetime

data = json.load(sys.stdin)
for pos in data.get('positions', []):
    opened_at = pos.get('opened_at', '')
    if opened_at:
        try:
            opened_dt = datetime.fromisoformat(opened_at.replace('Z', '+00:00'))
            age_hours = (datetime.now().replace(tzinfo=opened_dt.tzinfo) - opened_dt).total_seconds() / 3600
            if age_hours > 72:
                print(f'üö® –ü–æ–∑–∏—Ü–∏—è {pos.get(\"symbol\")} —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–∞—è: {age_hours:.1f} —á–∞—Å–æ–≤')
            elif age_hours > 48:
                print(f'‚ö†Ô∏è  –ü–æ–∑–∏—Ü–∏—è {pos.get(\"symbol\")} —Å—Ç–∞—Ä–∞—è: {age_hours:.1f} —á–∞—Å–æ–≤')
        except:
            pass
"
    else
        echo "‚úÖ –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π"
    fi
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏—è—Ö"
fi

echo ""

# 4. –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–≥–Ω–∞–ª—ã
echo "üì° –ü–û–°–õ–ï–î–ù–ò–ï –°–ò–ì–ù–ê–õ–´ (5):"
echo "------------------------"
recent_signals=$(curl -s -H "X-API-Key: 5fa613c18a92d0d69d3bf5a5f7d72396cd5cca41ed0bc1d058db499107ba6f73" \
  "http://localhost:8000/signals/recent?limit=5" | python3 -m json.tool)

if [ $? -eq 0 ]; then
    echo "$recent_signals"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–µ–∂–µ—Å—Ç—å —Å–∏–≥–Ω–∞–ª–æ–≤
    echo ""
    echo "üïê –ê–ù–ê–õ–ò–ó –°–í–ï–ñ–ï–°–¢–ò –°–ò–ì–ù–ê–õ–û–í:"
    echo "$recent_signals" | python3 -c "
import sys, json
from datetime import datetime

data = json.load(sys.stdin)
if data:
    latest_signal = data[0]
    created_at = latest_signal.get('created_at', '')
    if created_at:
        try:
            signal_dt = datetime.fromisoformat(created_at.replace('Z', '+00:00'))
            age_hours = (datetime.now().replace(tzinfo=signal_dt.tzinfo) - signal_dt).total_seconds() / 3600
            
            if age_hours < 1:
                print(f'‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–≥–Ω–∞–ª —Å–≤–µ–∂–∏–π: {age_hours:.1f} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥')
            elif age_hours < 6:
                print(f'‚ö†Ô∏è  –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–≥–Ω–∞–ª –Ω–µ–¥–∞–≤–Ω–∏–π: {age_hours:.1f} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥')
            else:
                print(f'üö® –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–≥–Ω–∞–ª —Å—Ç–∞—Ä—ã–π: {age_hours:.1f} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥')
                print('   –í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Å–∏–≥–Ω–∞–ª–æ–≤!')
        except:
            print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è —Å–∏–≥–Ω–∞–ª–∞')
else:
    print('‚ùå –ù–µ—Ç —Å–∏–≥–Ω–∞–ª–æ–≤')
"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–≥–Ω–∞–ª—ã"
fi

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
echo "üìã –ü–†–û–í–ï–†–ö–ê –õ–û–ì–û–í (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):"
echo "--------------------------------------"
recent_logs=$(journalctl -u myassistent --no-pager -n 50 | grep -i "error\|exception\|traceback\|failed" | tail -10)

if [ -n "$recent_logs" ]; then
    echo "üö® –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò:"
    echo "$recent_logs"
else
    echo "‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi

echo ""

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–µ–∂–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
echo "üìä –ü–†–û–í–ï–†–ö–ê –°–í–ï–ñ–ï–°–¢–ò –î–ê–ù–ù–´–•:"
echo "----------------------------"
latest_prices=$(curl -s -H "X-API-Key: 5fa613c18a92d0d69d3bf5a5f7d72396cd5cca41ed0bc1d058db499107ba6f73" \
  "http://localhost:8000/prices/latest?symbol=BTC/USDT&timeframe=1h&limit=1" | python3 -m json.tool)

if [ $? -eq 0 ]; then
    data_count=$(echo "$latest_prices" | python3 -c "import sys, json; data=json.load(sys.stdin); print(len(data.get('data', [])))")
    
    if [ "$data_count" -gt 0 ]; then
        echo "‚úÖ –î–∞–Ω–Ω—ã–µ —Ü–µ–Ω –¥–æ—Å—Ç—É–ø–Ω—ã ($data_count –∑–∞–ø–∏—Å–µ–π)"
        echo "$latest_prices"
    else
        echo "üö® –ù–ï–¢ –î–ê–ù–ù–´–• –û –¶–ï–ù–ê–•!"
        echo "–í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö"
    fi
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ü–µ–Ω"
fi

echo ""

# 7. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
echo "----------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏ –¥–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
if [ "$errors" != "N/A" ] && [ "$errors" -gt 0 ]; then
    echo "üö® –ï—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –º–æ–Ω–∏—Ç–æ—Ä–µ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏"
fi

if [ "$pos_count" -gt 0 ]; then
    echo "üí∞ –ï—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏ - —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–∏—Å–∫–∞–º–∏"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
if [ "$last_update" != "N/A" ]; then
    echo "$monitor_status" | python3 -c "
import sys, json
from datetime import datetime

data = json.load(sys.stdin)
last_update = data.get('last_update', '')
if last_update:
    try:
        update_dt = datetime.fromisoformat(last_update.replace('Z', '+00:00'))
        age_minutes = (datetime.now().replace(tzinfo=update_dt.tzinfo) - update_dt).total_seconds() / 60
        
        if age_minutes > 30:
            print(f'‚ö†Ô∏è  –ú–æ–Ω–∏—Ç–æ—Ä –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è {age_minutes:.0f} –º–∏–Ω—É—Ç')
            print('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ')
        else:
            print('‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ')
    except:
        pass
"
fi

echo ""
echo "üîÑ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø:"
echo "----------------------------------------"
echo "curl -X POST \"http://localhost:8000/prices/fetch\" \\"
echo "  -H \"X-API-Key: 5fa613c18a92d0d69d3bf5a5f7d72396cd5cca41ed0bc1d058db499107ba6f73\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"symbols\": [\"BTC/USDT\"], \"timeframe\": \"1h\", \"force_update\": true}'"
echo ""
echo "curl -X POST \"http://localhost:8000/paper-monitor/update\" \\"
echo "  -H \"X-API-Key: 5fa613c18a92d0d69d3bf5a5f7d72396cd5cca41ed0bc1d058db499107ba6f73\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"force_update\": true}'"

echo ""
echo "üìÖ –°–õ–ï–î–£–Æ–©–ê–Ø –ü–†–û–í–ï–†–ö–ê:"
echo "---------------------"
echo "–£—Ç—Ä–æ–º: $(date -d '+1 day' '+%Y-%m-%d') 09:00"
echo "–í–µ—á–µ—Ä–æ–º: $(date '+%Y-%m-%d') 21:00"
echo ""
echo "‚úÖ –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù"
